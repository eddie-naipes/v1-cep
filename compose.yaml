version: '3.9'

services:
  postgres:
    image: 'postgres:17.2'
    container_name: postgres_db
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: secret
    ports:
      - '5433:5433'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  wiremock:
    image: 'wiremock/wiremock:3.10.0'
    container_name: wiremock
    ports:
      - '8080:8080'
    volumes:
      - ./mocks:/home/wiremock
    command: --verbose
    networks:
      - app_network

  spring_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring_app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
    ports:
      - '8081:8080'
    depends_on:
      postgres:
        condition: service_healthy
      wiremock:
        condition: service_started
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
